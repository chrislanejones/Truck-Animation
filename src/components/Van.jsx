/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { extend, useFrame } from "@react-three/fiber";
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";

export function Van(props) {
  const { nodes, materials } = useGLTF("/Van.glb");

  const meshRef = useRef();
  const [direction, setDirection] = useState(-1);
  const speedFactor = 33;

  useFrame((state, delta) => {
    if (meshRef.current) {
      meshRef.current.position.z += direction * delta * speedFactor;

      if (meshRef.current.position.z > 0) {
        setDirection(-1);
      } else if (meshRef.current.position.z < -200) {
        setDirection(1);
      }
    }
  });

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.1}>
        <group ref={meshRef}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes["Driverside-Window"].geometry}
            material={materials.Glass}
            position={[-5.566, 0, 0]}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body.geometry}
          material={materials.Body}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Passangerside-window"].geometry}
          material={materials.Glass}
          position={[6.595, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Lights.geometry}
          material={materials.Glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Tires.geometry}
          material={materials.Tire}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Windshield.geometry}
          material={materials.Glass}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Van.glb");
